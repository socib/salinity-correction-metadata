# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-10-31 15:24
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from scb_mng_models.models.instrumentation import Deployment, Sensor

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ('scb_mng_models', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='ctd_salinity_correction',
            fields=[
                ('ctd_salinity_correction_id', models.AutoField(primary_key=True)),
                ('ctd_salinity_correction_deployment_id', models.ForeignKey(to='scb_mng_models.Deployment',
                db_column='ctd_salinity_correction_deployment_id', db_index=False, db_constraint=False)),
                #name = models.ForeignKey(instrumentation.Cruise, null=True)
                #name = models.CharField(_('cruise name'), max_length=100, null=True, blank=True)
                #ctd_correction_deployment = models.CharField(_('deployment name'), max_length=50, choices=DEPLOYMENT_CHOICES, default='scb-sbe9002')
                #initial_date = models.DateField(_('initial date'), null=True, blank=True)
                #end_date = models.DateField(_('end date'), null=True, blank=True)
                #cruise_length = models.IntegerField(_('cruise length'), blank=True)
                #ctd_name = models.CharField(_('CTD instrument name'),max_length=12, choices=INSTRUMENT_CHOICES, default='scb-sbe9002')
                #ctd_serial = models.TextField(_('CTD serial number'), blank=True)
                ('ctd_salinity_correction_date_last_service_sensor_01', models.DateField(null=True, blank=True)),
                ('ctd_salinity_correction_interval_service_cruise_sensor_01', models.IntegerField(null=True, blank=True)),
                ('ctd_salinity_correction_date_last_service_sensor_02', models.DateField(null=True, blank=True)),
                ('ctd_salinity_correction_interval_service_cruise_sensor_02', models.IntegerField(null=True, blank=True)),
                ('ctd_salinity_correction_sensor_01_corr_coeff', models.FloatField(null=False, blank=False)),
                ('ctd_salinity_correction_sensor_01_mean_resid', models.FloatField(null=False, blank=False)),
                ('ctd_salinity_correction_sensor_01_std_resid', models.FloatField(null=False, blank=False)),
                ('ctd_salinity_correction_sensor_01_id', models.ForeignKey(to='scb_mng_models.Sensor',
                db_column='ctd_salinity_correction_sensor_01_id', db_index=False, db_constraint=False, null=True, blank=True)),

                ('ctd_salinity_correction_sensor_02_corr_coeff', models.FloatField(null=True, blank=True)),
                ('ctd_salinity_correction_sensor_02_mean_resid', models.FloatField(null=True, blank=True)),
                ('ctd_salinity_correction_sensor_02_std_resid', models.FloatField(null=True, blank=True)),
                ('ctd_salinity_correction_sensor_02_id', models.ForeignKey(to='scb_mng_models.Sensor',
                db_column='ctd_salinity_correction_sensor_02_id', db_index=False, db_constraint=False, null=True, blank=True)),

                ('ctd_salinity_correction_flag', models.CharField(max_length=10, null=True, blank=True)),
                ('ctd_salinity_correction_outliers_removed', models.TextField(null=True, blank=True)),
                ('ctd_salinity_correction_comments', models.TextField(null=True, blank=True)),
                ('ctd_salinity_correction_approved_results', models.BooleanField(default=False, blank=True, null=True, verbose_name='approved corrections results')),
                ('created_on', models.DateField(null=False,blank=False)),
                ('created_by_id', models.IntegerField(null=False, blank=False)),
                ('updated_on', models.DateField(null=False, blank=False)),
                ('updated_by_id', models.IntegerField(null=False, blank=False))
            ],
            options={
                'managed': True,
                'db_table': '"corrections\".\"ctd_salinity_correction"'

            },
        ),
        migrations.RunSQL("ALTER TABLE corrections.ctd_salinity_correction ADD CONSTRAINT ctd_salinity_correction_deployment_fk FOREIGN KEY(ctd_salinity_correction_deployment_id) REFERENCES instrumentation.deployment(deployment_id)"),
        migrations.RunSQL("ALTER TABLE corrections.ctd_salinity_correction ADD CONSTRAINT ctd_salinity_correction_sensor_01_fk FOREIGN KEY(ctd_salinity_correction_sensor_01_id) REFERENCES instrumentation.sensor(sensor_id)"),
        migrations.RunSQL("ALTER TABLE corrections.ctd_salinity_correction ADD CONSTRAINT ctd_salinity_correction_sensor_02_fk FOREIGN KEY(ctd_salinity_correction_sensor_02_id) REFERENCES instrumentation.sensor(sensor_id)")

    ]
